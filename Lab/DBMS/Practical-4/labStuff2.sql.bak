--QUERY

select v_code, avg(p_price)
	from product 
	group by v_code;
	
--Remove NULL values from above. 
--Use WHERE V_VODE IS NOT NULL
--You should get two rows

select v_code, avg(p_price)
	from product 
	where v_code is not null
	group by v_code;
	
select v_code, p_price *qty t_cost
	from product
	where v_code is not null	
	order by v_code;
--No JOIN required here cause of NOT NULL

select v_code, SUM(p_price *qty) t_cost
	from product
	where v_code is not null	
	group by v_code
	having (sum(p_price*qty) > 400)
	order by sum(p_price * qty) desc;

----------------------------------------------------
--Querey 6

select v_code, p_price, qty from product;

error
create or replace view PRODUCT_STATS as
select v_code, sum(p_price * qty) tot_cost,
		max(qty) mx_qty,
		min(qty) mn_qty,
		avg(qty) av_qty
		from product
		where v_code is not null 
		group by v_code;
		
----------------------------------------------------
--Querey 7

--incomplete
select c_code, balance, sum(l_units * l_price) tot_purchase
	from 
	((select inv_num, sum(l_units * l_price) from invoice group by inv_name)
	join 
	(select inv_num, sum(l_units * l_price)) 
		from
		
select c_code, sum(tot_line) tot_inv
	 from invoice natural join (
		select inv_num, sum(l_units * l_price) tot_line	
			from line
			group by inv_num) tt
	group by (c_code);
--JOIN with CUSTOMER to get customer_name

select c_code, inv_num, tot_inv
	 from invoice natural join (
		select inv_num, sum(l_units * l_price) tot_line	
			from line
			group by inv_num) tt
	group by (c_code);

	

SELECT C_CODE, LNAME, FNAME, TOT_INV, BALANCE
       FROM CUSTOMER NATURAL JOIN (
	       SELECT C_CODE, SUM(TOT_LINE) TOT_INV
		   FROM INVOICE NATURAL JOIN (
		   SELECT INV_NUM, SUM(L_UNITS*L_PRICE) TOT_LINE 
		        FROM LINE
				GROUP BY INV_NUM) TT
		   GROUP BY C_CODE)
	ORDER BY (C_CODE);
	
	
----------------------------------------------------
--Querey 8

--get line_count with inv_num and tot_purchase
----------------------------------------------------
--Querey 9

compare c_code not in 
	(select distinct c_code);

--5 will be the answer
--10, 13, 16, 17, 19

----------------------------------------------------
--Querey 10

----------------------------------------------------
--Querey 11

----------------------------------------------------
--Querey 12
